/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SellersIndexImport } from './routes/sellers/index'
import { Route as ItemsIndexImport } from './routes/items/index'
import { Route as BuyersIndexImport } from './routes/buyers/index'
import { Route as SellersSellerIdImport } from './routes/sellers/$sellerId'
import { Route as BuyersBuyerIdImport } from './routes/buyers/$buyerId'
import { Route as ItemsItemIdIndexImport } from './routes/items/$itemId/index'
import { Route as ItemsItemIdCategoriesIndexImport } from './routes/items/$itemId/categories/index'
import { Route as ItemsItemIdCategoriesItemCategoryIdIndexImport } from './routes/items/$itemId/categories/$itemCategoryId/index'
import { Route as ItemsItemIdCategoriesItemCategoryIdOptionsIndexImport } from './routes/items/$itemId/categories/$itemCategoryId/options/index'
import { Route as ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdImport } from './routes/items/$itemId/categories/$itemCategoryId/options/$optionId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SellersIndexRoute = SellersIndexImport.update({
  id: '/sellers/',
  path: '/sellers/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsIndexRoute = ItemsIndexImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => rootRoute,
} as any)

const BuyersIndexRoute = BuyersIndexImport.update({
  id: '/buyers/',
  path: '/buyers/',
  getParentRoute: () => rootRoute,
} as any)

const SellersSellerIdRoute = SellersSellerIdImport.update({
  id: '/sellers/$sellerId',
  path: '/sellers/$sellerId',
  getParentRoute: () => rootRoute,
} as any)

const BuyersBuyerIdRoute = BuyersBuyerIdImport.update({
  id: '/buyers/$buyerId',
  path: '/buyers/$buyerId',
  getParentRoute: () => rootRoute,
} as any)

const ItemsItemIdIndexRoute = ItemsItemIdIndexImport.update({
  id: '/items/$itemId/',
  path: '/items/$itemId/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsItemIdCategoriesIndexRoute = ItemsItemIdCategoriesIndexImport.update(
  {
    id: '/items/$itemId/categories/',
    path: '/items/$itemId/categories/',
    getParentRoute: () => rootRoute,
  } as any,
)

const ItemsItemIdCategoriesItemCategoryIdIndexRoute =
  ItemsItemIdCategoriesItemCategoryIdIndexImport.update({
    id: '/items/$itemId/categories/$itemCategoryId/',
    path: '/items/$itemId/categories/$itemCategoryId/',
    getParentRoute: () => rootRoute,
  } as any)

const ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute =
  ItemsItemIdCategoriesItemCategoryIdOptionsIndexImport.update({
    id: '/items/$itemId/categories/$itemCategoryId/options/',
    path: '/items/$itemId/categories/$itemCategoryId/options/',
    getParentRoute: () => rootRoute,
  } as any)

const ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute =
  ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdImport.update({
    id: '/items/$itemId/categories/$itemCategoryId/options/$optionId',
    path: '/items/$itemId/categories/$itemCategoryId/options/$optionId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/buyers/$buyerId': {
      id: '/buyers/$buyerId'
      path: '/buyers/$buyerId'
      fullPath: '/buyers/$buyerId'
      preLoaderRoute: typeof BuyersBuyerIdImport
      parentRoute: typeof rootRoute
    }
    '/sellers/$sellerId': {
      id: '/sellers/$sellerId'
      path: '/sellers/$sellerId'
      fullPath: '/sellers/$sellerId'
      preLoaderRoute: typeof SellersSellerIdImport
      parentRoute: typeof rootRoute
    }
    '/buyers/': {
      id: '/buyers/'
      path: '/buyers'
      fullPath: '/buyers'
      preLoaderRoute: typeof BuyersIndexImport
      parentRoute: typeof rootRoute
    }
    '/items/': {
      id: '/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof ItemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/sellers/': {
      id: '/sellers/'
      path: '/sellers'
      fullPath: '/sellers'
      preLoaderRoute: typeof SellersIndexImport
      parentRoute: typeof rootRoute
    }
    '/items/$itemId/': {
      id: '/items/$itemId/'
      path: '/items/$itemId'
      fullPath: '/items/$itemId'
      preLoaderRoute: typeof ItemsItemIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/items/$itemId/categories/': {
      id: '/items/$itemId/categories/'
      path: '/items/$itemId/categories'
      fullPath: '/items/$itemId/categories'
      preLoaderRoute: typeof ItemsItemIdCategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/items/$itemId/categories/$itemCategoryId/': {
      id: '/items/$itemId/categories/$itemCategoryId/'
      path: '/items/$itemId/categories/$itemCategoryId'
      fullPath: '/items/$itemId/categories/$itemCategoryId'
      preLoaderRoute: typeof ItemsItemIdCategoriesItemCategoryIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/items/$itemId/categories/$itemCategoryId/options/$optionId': {
      id: '/items/$itemId/categories/$itemCategoryId/options/$optionId'
      path: '/items/$itemId/categories/$itemCategoryId/options/$optionId'
      fullPath: '/items/$itemId/categories/$itemCategoryId/options/$optionId'
      preLoaderRoute: typeof ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdImport
      parentRoute: typeof rootRoute
    }
    '/items/$itemId/categories/$itemCategoryId/options/': {
      id: '/items/$itemId/categories/$itemCategoryId/options/'
      path: '/items/$itemId/categories/$itemCategoryId/options'
      fullPath: '/items/$itemId/categories/$itemCategoryId/options'
      preLoaderRoute: typeof ItemsItemIdCategoriesItemCategoryIdOptionsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/buyers/$buyerId': typeof BuyersBuyerIdRoute
  '/sellers/$sellerId': typeof SellersSellerIdRoute
  '/buyers': typeof BuyersIndexRoute
  '/items': typeof ItemsIndexRoute
  '/sellers': typeof SellersIndexRoute
  '/items/$itemId': typeof ItemsItemIdIndexRoute
  '/items/$itemId/categories': typeof ItemsItemIdCategoriesIndexRoute
  '/items/$itemId/categories/$itemCategoryId': typeof ItemsItemIdCategoriesItemCategoryIdIndexRoute
  '/items/$itemId/categories/$itemCategoryId/options/$optionId': typeof ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute
  '/items/$itemId/categories/$itemCategoryId/options': typeof ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/buyers/$buyerId': typeof BuyersBuyerIdRoute
  '/sellers/$sellerId': typeof SellersSellerIdRoute
  '/buyers': typeof BuyersIndexRoute
  '/items': typeof ItemsIndexRoute
  '/sellers': typeof SellersIndexRoute
  '/items/$itemId': typeof ItemsItemIdIndexRoute
  '/items/$itemId/categories': typeof ItemsItemIdCategoriesIndexRoute
  '/items/$itemId/categories/$itemCategoryId': typeof ItemsItemIdCategoriesItemCategoryIdIndexRoute
  '/items/$itemId/categories/$itemCategoryId/options/$optionId': typeof ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute
  '/items/$itemId/categories/$itemCategoryId/options': typeof ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/buyers/$buyerId': typeof BuyersBuyerIdRoute
  '/sellers/$sellerId': typeof SellersSellerIdRoute
  '/buyers/': typeof BuyersIndexRoute
  '/items/': typeof ItemsIndexRoute
  '/sellers/': typeof SellersIndexRoute
  '/items/$itemId/': typeof ItemsItemIdIndexRoute
  '/items/$itemId/categories/': typeof ItemsItemIdCategoriesIndexRoute
  '/items/$itemId/categories/$itemCategoryId/': typeof ItemsItemIdCategoriesItemCategoryIdIndexRoute
  '/items/$itemId/categories/$itemCategoryId/options/$optionId': typeof ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute
  '/items/$itemId/categories/$itemCategoryId/options/': typeof ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/buyers/$buyerId'
    | '/sellers/$sellerId'
    | '/buyers'
    | '/items'
    | '/sellers'
    | '/items/$itemId'
    | '/items/$itemId/categories'
    | '/items/$itemId/categories/$itemCategoryId'
    | '/items/$itemId/categories/$itemCategoryId/options/$optionId'
    | '/items/$itemId/categories/$itemCategoryId/options'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/buyers/$buyerId'
    | '/sellers/$sellerId'
    | '/buyers'
    | '/items'
    | '/sellers'
    | '/items/$itemId'
    | '/items/$itemId/categories'
    | '/items/$itemId/categories/$itemCategoryId'
    | '/items/$itemId/categories/$itemCategoryId/options/$optionId'
    | '/items/$itemId/categories/$itemCategoryId/options'
  id:
    | '__root__'
    | '/'
    | '/buyers/$buyerId'
    | '/sellers/$sellerId'
    | '/buyers/'
    | '/items/'
    | '/sellers/'
    | '/items/$itemId/'
    | '/items/$itemId/categories/'
    | '/items/$itemId/categories/$itemCategoryId/'
    | '/items/$itemId/categories/$itemCategoryId/options/$optionId'
    | '/items/$itemId/categories/$itemCategoryId/options/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BuyersBuyerIdRoute: typeof BuyersBuyerIdRoute
  SellersSellerIdRoute: typeof SellersSellerIdRoute
  BuyersIndexRoute: typeof BuyersIndexRoute
  ItemsIndexRoute: typeof ItemsIndexRoute
  SellersIndexRoute: typeof SellersIndexRoute
  ItemsItemIdIndexRoute: typeof ItemsItemIdIndexRoute
  ItemsItemIdCategoriesIndexRoute: typeof ItemsItemIdCategoriesIndexRoute
  ItemsItemIdCategoriesItemCategoryIdIndexRoute: typeof ItemsItemIdCategoriesItemCategoryIdIndexRoute
  ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute: typeof ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute
  ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute: typeof ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BuyersBuyerIdRoute: BuyersBuyerIdRoute,
  SellersSellerIdRoute: SellersSellerIdRoute,
  BuyersIndexRoute: BuyersIndexRoute,
  ItemsIndexRoute: ItemsIndexRoute,
  SellersIndexRoute: SellersIndexRoute,
  ItemsItemIdIndexRoute: ItemsItemIdIndexRoute,
  ItemsItemIdCategoriesIndexRoute: ItemsItemIdCategoriesIndexRoute,
  ItemsItemIdCategoriesItemCategoryIdIndexRoute:
    ItemsItemIdCategoriesItemCategoryIdIndexRoute,
  ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute:
    ItemsItemIdCategoriesItemCategoryIdOptionsOptionIdRoute,
  ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute:
    ItemsItemIdCategoriesItemCategoryIdOptionsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/buyers/$buyerId",
        "/sellers/$sellerId",
        "/buyers/",
        "/items/",
        "/sellers/",
        "/items/$itemId/",
        "/items/$itemId/categories/",
        "/items/$itemId/categories/$itemCategoryId/",
        "/items/$itemId/categories/$itemCategoryId/options/$optionId",
        "/items/$itemId/categories/$itemCategoryId/options/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/buyers/$buyerId": {
      "filePath": "buyers/$buyerId.tsx"
    },
    "/sellers/$sellerId": {
      "filePath": "sellers/$sellerId.tsx"
    },
    "/buyers/": {
      "filePath": "buyers/index.tsx"
    },
    "/items/": {
      "filePath": "items/index.tsx"
    },
    "/sellers/": {
      "filePath": "sellers/index.tsx"
    },
    "/items/$itemId/": {
      "filePath": "items/$itemId/index.tsx"
    },
    "/items/$itemId/categories/": {
      "filePath": "items/$itemId/categories/index.tsx"
    },
    "/items/$itemId/categories/$itemCategoryId/": {
      "filePath": "items/$itemId/categories/$itemCategoryId/index.tsx"
    },
    "/items/$itemId/categories/$itemCategoryId/options/$optionId": {
      "filePath": "items/$itemId/categories/$itemCategoryId/options/$optionId.tsx"
    },
    "/items/$itemId/categories/$itemCategoryId/options/": {
      "filePath": "items/$itemId/categories/$itemCategoryId/options/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
